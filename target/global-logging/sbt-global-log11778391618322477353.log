[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Oracle Corporation Java 11.0.17)
[debug]       Load.loadUnit: plugins took 174.1111ms
[debug]       Load.loadUnit: defsScala took 0.5151ms
[debug] [Loading] Scanning directory C:\Users\goura\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\goura\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.0092 ms
[debug]           Load.resolveProject(global-plugins) took 70.9212ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\goura\.sbt\1.0\plugins, plugins: List(<none>))) took 159.7146ms
[debug] [Loading] Done in C:\Users\goura\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 197.88ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3693ms
[debug]     Load.loadUnit(file:/C:/Users/goura/.sbt/1.0/plugins/, ...) took 386.8772ms
[debug]   Load.apply: load took 623.2196ms
[debug]   Load.apply: resolveProjects took 8.6923ms
[debug]   Load.apply: finalTransforms took 80.0179ms
[debug]   Load.apply: config.delegates took 7.8316ms
[debug]   Load.apply: Def.make(settings)... took 538.4141ms
[debug]   Load.apply: structureIndex took 119.1148ms
[debug]   Load.apply: mkStreams took 1.4607ms
[info] loading global plugins from C:\Users\goura\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3076.4658ms
[debug]           Load.loadUnit: plugins took 30.439ms
[debug]           Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\goura\rockTheJVM\spark-optimization_main\Humidity_Sensor_Data_Cli\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\goura\rockTheJVM\spark-optimization_main\Humidity_Sensor_Data_Cli\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2017 ms
[debug]               Load.resolveProject(humidity_sensor_data_cli-build) took 1.3544ms
[debug]             Load.loadTransitive: finalizeProject(Project(id humidity_sensor_data_cli-build, base: C:\Users\goura\rockTheJVM\spark-optimization_main\Humidity_Sensor_Data_Cli\project, plugins: List(<none>))) took 4.3383ms
[debug] [Loading] Done in C:\Users\goura\rockTheJVM\spark-optimization_main\Humidity_Sensor_Data_Cli\project, returning: (humidity_sensor_data_cli-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6.2435ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.01ms
[debug]         Load.loadUnit(file:/C:/Users/goura/rockTheJVM/spark-optimization_main/Humidity_Sensor_Data_Cli/project/, ...) took 37.7299ms
[debug]       Load.apply: load took 39.018ms
[debug]       Load.apply: resolveProjects took 0.1035ms
[debug]       Load.apply: finalTransforms took 8.6439ms
[debug]       Load.apply: config.delegates took 0.3496ms
[debug]       Load.apply: Def.make(settings)... took 142.9028ms
[debug]       Load.apply: structureIndex took 25.5699ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\goura\rockTheJVM\spark-optimization_main\Humidity_Sensor_Data_Cli\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 579.3132ms
[debug]     Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\Users\goura\rockTheJVM\spark-optimization_main\Humidity_Sensor_Data_Cli
[debug]       Load.loadUnit: mkEval took 11.4693ms
